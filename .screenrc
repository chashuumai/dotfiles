###################
# screen settings
# ~/.screenrc
# ~/.screenrc.local (local settings & addon)

#################################################
# オプション
#################################################
# 現在のウィンドウに可視ベル
vbell off
# ハングアップしたとき自動的にデタッチ
autodetach on
# 起動時に著作権表示
startup_message off
# スクロールバックバッファの大きさ
defscrollback 1000
# escape <C-z>
escape ^z^z
# シェルタイトル
shelltitle '% |zsh'

################
# encoding
defencoding utf8
encoding utf8 utf8

################
# zombie コマンド引数指定、screen中でプロセス死時、指定キーを押すまでウインドウ残
zombie kr

# echo command name whenever a window is created or resurrected.
verbose on

# screen起動時の起動設定
shell -$SHELL

# notice when some event rised on hidden windows
defmonitor on

#################################################
# キーバインド
#################################################
bind v eval "split -v" focus screen
bind s eval split focus screen

# key binds of window splitting/resize
bind j eval 'echo "Operate window"' 'command -c operate'
bind -c operate ^]  command
bind -c operate j eval 'focus down' 'command -c operate'
bind -c operate k eval 'focus up' 'command -c operate'
bind -c operate t eval 'focus top' 'command -c operate'
bind -c operate b eval 'focus bottom' 'command -c operate'
bind -c operate + eval 'resize +1' 'command -c operate'
bind -c operate - eval 'resize -1' 'command -c operate'
bind -c operate s eval 'split' 'command -c operate'
bind -c operate c eval 'screen' 'command -c operate'
bind -c operate x eval 'remove' 'command -c operate'
bind -c operate v eval 'split -v' 'command -c operate'

# continuous switch focus to other region(like vi)
bind ^J eval 'focus down' 'command -c cfocus'
bind ^K eval 'focus up'   'command -c cfocus'
bind -c cfocus ^J eval 'focus down'   'command -c cfocus'
bind -c cfocus ^K eval 'focus up'     'command -c cfocus'
bind -c cfocus ^T eval 'focus top'    'command -c cfocus'
bind -c cfocus ^B eval 'focus bottom' 'command -c cfocus'

# continuous resize region
# orverride default `r'(wrap) mapping.
bind r eval 'command -c cresize'
bind -c cresize j eval 'resize +1'  'command -c cresize'
bind -c cresize k eval 'resize -1'  'command -c cresize'
bind -c cresize J eval 'resize +10' 'command -c cresize'
bind -c cresize K eval 'resize -10' 'command -c cresize'
bind -c cresize = eval 'resize ='   'command -c cresize'
bind -c cresize n eval 'resize min' 'command -c cresize'
bind -c cresize x eval 'resize max' 'command -c cresize'

# continuous switch to other window
bind ^N eval 'next' 'command -c cselect'
bind ^P eval 'prev' 'command -c cselect'
bind -c cselect ^N eval 'next' 'command -c cselect'
bind -c cselect ^P eval 'prev' 'command -c cselect'

# list of all windows is displayed in the blank window(-b) for visual window selection.
# override default `w'(windows) mapping.
bind w  windowlist -b
bind ^W windowlist -b -m # sorting by most-recentry-used list.

# disables vbell toggle binding to use ^G as cancel.
bind ^G

# window re-numbering
# override default `N'(number) mapping
bind N colon 'number '

# refuses yet another hack in rpm packaged screenrc.
# both ] and ^] does write the paste (default unnamed) buffer.
bind ^] paste .

################
# use bright colors for bold text.
attrcolor b ".I"

# アンダーラインの代わりに青のテキストを用いる。
#attrcolor u "-u b"
attrcolor u "b"
# 高輝度色のテキストをボールドにもする。
attrcolor i "+b"

# この下の一行を入れないと、Macのターミナルでウインドウスクロールが出来ない
termcapinfo xterm* ti@:te@

# enable background-color-erase setting.
defbce on

# the $TERM variable set to `xterm' for various environment.
term xterm
#term xterm-256color

# enable 256 color
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'

# don't resize terminal width when re-attached.
termcapinfo xterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'

# changes the windowlist format to suit caption/hardstatus
windowlist title  '%{u .g}Num Flags Title%=[0-9] select the number [movement] j,C-n:Down k,C-p:Up (C-)f:PageDown (C-)b:PageUp'
windowlist string '%{.g}%3n %{.y}%f%09=%{dg} %t %='

#############
# color setting
# caption
#caption always "%{=r dd}%`%-w%{+b WK}%n %t%{-}%+w %= [%02c]"
caption always '%?%F%{= gW}%:%{= Kk}%?%2n%f%07=%t%='

# hardstatus
defhstatus ^En:^Et@^EH
hardstatus on
hardstatus alwayslastline '%m/%d %02c:%s %{= .g}%H%{-} %L=%-w%45L>%{=u g.}%n %t%{-}%+w %-17<%=%{= .y}(%l)'
#hardstatus alwayslastline "[%02c] %`%-w%{=b bw}%n %t%{-}%+w"
#hardstatus alwayslastline "%{= gk}[%m/%d %02c:%s] %{gW} %-w%{= wk}%n %t%{-}%+w %=%{gk}    $USER@$HOSTNAME[$LANG] (%l) "

# sorendition
sorendition "+rb .G"

# include hostlocal .screenrc
source '.screenrc.local'

